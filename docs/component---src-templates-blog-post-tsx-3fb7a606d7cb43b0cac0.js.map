{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/reply.tsx","webpack://gatsby-starter-blog/./src/components/license.tsx","webpack://gatsby-starter-blog/./src/templates/blog-post.tsx"],"names":["className","href","target","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","update","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"mappings":"kMAWA,EATc,WACV,OACI,2BAASA,UAAS,SACd,qBAAGC,KAAI,kEAAqEC,OAAO,UAAnF,SACA,qBAAGD,KAAI,QAAP,S,oBCSZ,EAbgB,WAEZ,OACI,qBAAGD,UAAS,WAAZ,kCAGI,qBAAGC,KAAI,qDAAwDC,OAAO,UAAtE,yFCyDZ,EAzDyB,SAAC,GAAqB,MAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SACvBC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACXC,EAAkBR,EAAlBQ,SAAUC,EAAQT,EAARS,KAEjB,OACI,gBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GAC/B,gBAAC,IAAD,CACIG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKU,UAEtB,2BACIf,UAAU,YACVgB,WAAS,EACTC,SAAS,6BACT,8BACI,sBAAIC,SAAS,YAAYb,EAAKQ,YAAYH,OAC1C,qBAAGV,UAAS,aAAgBK,EAAKQ,YAAYM,KAA7C,eAA+Dd,EAAKQ,YAAYO,SAEpF,2BACIC,wBAAyB,CAACC,OAAQjB,EAAKkB,MACvCL,SAAS,gBAEb,gBAAC,EAAD,MACA,8BACI,gBAAC,EAAD,MACA,uBAAKlB,UAAU,iBACX,sBACIwB,MAAO,CACHC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAEb,0BACKlB,GACG,gBAAC,EAAAmB,KAAD,CAAMC,GAAIpB,EAASqB,OAAOC,KAAMC,IAAI,QAApC,KACOvB,EAASE,YAAYH,QAIpC,0BACKE,GACG,gBAAC,EAAAkB,KAAD,CAAMC,GAAInB,EAAKoB,OAAOC,KAAMC,IAAI,QAC3BtB,EAAKC,YAAYH,MADtB","file":"component---src-templates-blog-post-tsx-3fb7a606d7cb43b0cac0.js","sourcesContent":["import * as React from \"react\"\n\nconst Reply = () => {\n    return (\n        <section className={`reply`}>\n            <a href={`https://github.com/DongchengWang/DongchengWang.github.io/issues`} target=\"_blank\">Reply</a>\n            <a href={`#nav`}>TOP</a>\n        </section>\n    )\n}\n\nexport default Reply\n","import * as React from \"react\"\n\nconst License = () => {\n\n    return (\n        <p className={`license`}>\n            This work is licensed under\n            {` `}\n            <a href={`https://creativecommons.org/licenses/by-nc-nd/4.0/`} target=\"_blank\">\n                Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License.\n            </a>\n        </p>\n    )\n}\n\nexport default License\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Reply from \"../components/reply\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport License from \"../components/license\";\n\nconst BlogPostTemplate = ({data, location}) => {\n    const post = data.markdownRemark\n    const siteTitle = data.site.siteMetadata?.title || `Title`\n    const {previous, next} = data\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO\n                title={post.frontmatter.title}\n                description={post.excerpt}\n            />\n            <article\n                className=\"blog-post\"\n                itemScope\n                itemType=\"http://schema.org/Article\">\n                <header>\n                    <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n                    <p className={`post-date`}>{post.frontmatter.date}, modified: {post.frontmatter.update}</p>\n                </header>\n                <section\n                    dangerouslySetInnerHTML={{__html: post.html}}\n                    itemProp=\"articleBody\"\n                />\n                <Reply/>\n                <footer>\n                    <License/>\n                    <nav className=\"blog-post-nav\">\n                        <ul\n                            style={{\n                                display: `flex`,\n                                flexWrap: `wrap`,\n                                justifyContent: `space-between`,\n                                listStyle: `none`,\n                                padding: 0,\n                            }}>\n                            <li>\n                                {previous && (\n                                    <Link to={previous.fields.slug} rel=\"prev\">\n                                        ← {previous.frontmatter.title}\n                                    </Link>\n                                )}\n                            </li>\n                            <li>\n                                {next && (\n                                    <Link to={next.fields.slug} rel=\"next\">\n                                        {next.frontmatter.title} →\n                                    </Link>\n                                )}\n                            </li>\n                        </ul>\n                    </nav>\n                </footer>\n            </article>\n        </Layout>\n    )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        update(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}