{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/list-item.tsx","webpack://gatsby-starter-blog/./src/components/list.tsx","webpack://gatsby-starter-blog/./src/pages/index.tsx"],"names":["post","title","frontmatter","fields","slug","className","itemScope","itemType","Link","to","itemProp","date","update","dangerouslySetInnerHTML","__html","excerpt","data","location","category","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","filter","includes","length","style","listStyle","map","key"],"mappings":"2MAiCA,EA9BiB,SAAC,GAAW,IAAVA,EAAU,EAAVA,KACTC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACI,0BACI,2BACIC,UAAU,iBACVC,WAAS,EACTC,SAAS,6BACT,8BACI,0BACI,gBAAC,EAAAC,KAAD,CAAMC,GAAIT,EAAKG,OAAOC,KAAMM,SAAS,OACjC,wBAAMA,SAAS,YAAYT,MAIvC,+BACI,qBAAGI,UAAU,QAAQL,EAAKE,YAAYS,KAAtC,eAAwDX,EAAKE,YAAYU,QACzE,qBAAGP,UAAU,UACTQ,wBAAyB,CACrBC,OAAQd,EAAKe,SAEjBL,SAAS,oBCajC,EAhCa,SAAC,GAA+B,MAA9BM,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACrBC,GAAY,UAAAH,EAAKI,KAAKC,oBAAV,eAAwBpB,QAAxB,QAGZqB,EAFQN,EAAKO,kBAAkBC,MAEjBC,QAAO,SAAAzB,GAAI,OAAIA,EAAKE,YAAYgB,SAASQ,SAASR,MAEtE,OAAqB,IAAjBI,EAAMK,OAEF,gBAAC,IAAD,CAAQV,SAAUA,EAAUhB,MAAOkB,GAC/B,gBAAC,IAAD,CAAKlB,MAAM,cACX,sLAKA,4BAMR,gBAAC,IAAD,CAAQgB,SAAUA,EAAUhB,MAAOkB,GAC/B,gBAAC,IAAD,CAAKlB,MAAM,cACX,sBAAI2B,MAAO,CAACC,UAAW,SAClBP,EAAMQ,KACH,SAAA9B,GAAI,OAAK,gBAAC,EAAD,CAAUA,KAAMA,EAAM+B,IAAK/B,EAAKG,OAAOC,c,iECtBpE,UAJc,SAAC,GAAqB,IAApBY,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAClB,OAAO,gBAAC,IAAD,CAAMD,KAAMA,EAAMC,SAAUA,EAAUC,SAAU","file":"component---src-pages-index-tsx-4765d4a0fedeae20b2c1.js","sourcesContent":["import { Link } from \"gatsby\";\nimport * as React from \"react\";\n\nconst ListItem = ({post}) => {\n    const title = post.frontmatter.title || post.fields.slug\n\n    return (\n        <li>\n            <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\">\n                <header>\n                    <h2>\n                        <Link to={post.fields.slug} itemProp=\"url\">\n                            <span itemProp=\"headline\">{title}</span>\n                        </Link>\n                    </h2>\n                </header>\n                <section>\n                    <p className=\"date\">{post.frontmatter.date}, modified: {post.frontmatter.update}</p>\n                    <p className=\"excerpt\"\n                        dangerouslySetInnerHTML={{\n                            __html: post.excerpt,\n                        }}\n                        itemProp=\"description\"\n                    />\n                </section>\n            </article>\n        </li>\n    )\n}\n\nexport default ListItem\n","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ListItem from \"../components/list-item\";\n\nconst List = ({data, location, category}) => {\n    const siteTitle = data.site.siteMetadata?.title || `Title`\n    const nodes = data.allMarkdownRemark.nodes\n\n    const posts = nodes.filter(post => post.frontmatter.category.includes(category))\n\n    if (posts.length === 0) {\n        return (\n            <Layout location={location} title={siteTitle}>\n                <SEO title=\"All posts\"/>\n                <p>\n                    No blog posts found. Add markdown posts to \"content/blog\" (or the\n                    directory you specified for the \"gatsby-source-filesystem\" plugin in\n                    gatsby-config.js).\n                </p>\n                <hr/>\n            </Layout>\n        )\n    }\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO title=\"All posts\"/>\n            <ol style={{listStyle: `none`}}>\n                {posts.map(\n                    post => (<ListItem post={post} key={post.fields.slug}/>)\n                )}\n            </ol>\n        </Layout>\n    )\n}\n\nexport default List\n","import * as React from \"react\"\n\nimport List from \"../components/list\";\nimport { graphql } from \"gatsby\";\n\nconst Index = ({data, location}) => {\n    return <List data={data} location={location} category={\"tech\"}/>\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n          summary\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          update(formatString: \"MMMM DD, YYYY\")\n          title\n          category\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}