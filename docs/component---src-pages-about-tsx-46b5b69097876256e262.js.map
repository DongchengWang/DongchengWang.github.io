{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/nav.tsx","webpack://gatsby-starter-blog/./src/components/layout.tsx","webpack://gatsby-starter-blog/./src/components/bio.tsx","webpack://gatsby-starter-blog/./src/pages/about.tsx"],"names":["social","useStaticQuery","site","siteMetadata","id","className","Link","to","github","target","twitter","location","children","title","author","isRootPath","pathname","data-is-root-path","Date","getFullYear","href","name","data","S","layout","formats","src","width","height","quality","alt","summary","siteTitle"],"mappings":"07BA2CA,EAxCY,WAAM,MAcRA,EAAM,WAbCC,oBAAe,aAaRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACI,uBAAKI,GAAG,MAAMC,UAAU,WACpB,gBAAC,EAAAC,KAAD,CAAMD,UAAU,WAAWE,GAAI,KAA/B,QAGA,gBAAC,EAAAD,KAAD,CAAMC,GAAI,aAAV,YAGA,gBAAC,EAAAD,KAAD,CAAMC,GAAI,UAAV,SAGA,gBAAC,EAAAD,KAAD,CAAMC,GAAI,UAAV,SAGA,gBAAC,EAAAD,KAAD,CAAMC,GAAE,wBAAwBP,aAAA,EAAAA,EAAQQ,SAAR,IAAwBC,OAAO,UAA/D,UAGA,gBAAC,EAAAH,KAAD,CAAMC,GAAE,yBAAyBP,aAAA,EAAAA,EAAQU,UAAR,IAAyBD,OAAO,UAAjE,aCSZ,EAvCe,SAAC,GAAgC,MAA/BE,EAA+B,EAA/BA,SAAiBC,GAAc,EAArBC,MAAqB,EAAdD,UAcxBE,EAAM,WAbCb,oBAAe,cAaRC,KAAKC,oBAAb,aAAG,EAAwBW,OAEjCC,EADQ,MACKJ,EAASK,SAE5B,OACI,2BAASX,UAAU,iBAAiBY,oBAAmBF,GACnD,0BAAQV,UAAU,iBACd,gBAAC,EAAD,MACA,4BAEJ,wBAAMA,UAAU,gBAAgBO,GAChC,2BACA,0BAAQP,UAAS,QACb,+BACO,IAAIa,MAAOC,cADlB,mBAGI,qBAAGC,KAAK,4BAAR,UACA,2BAJJ,MAKO,IAAIF,MAAOC,cALlB,gBAK6C,8BAASL,EAAOO,W,wHCgB7E,EA3CY,WAAM,QACRC,GAAOrB,oBAAe,cAiBtBa,EAAM,UAAGQ,EAAKpB,KAAKC,oBAAb,aAAG,EAAwBW,OAC3B,UAAGQ,EAAKpB,KAAKC,oBAAb,OAAG,EAAwBH,OAEvC,OACI,uBAAKK,UAAU,OACX,gBAAC,EAAAkB,EAAD,CACIlB,UAAU,aACVmB,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARR,uBAUChB,aAAA,EAAAA,EAAQO,OACL,uCACe,8BAASP,EAAOO,MAD/B,KAC+CP,aAAA,EAAAA,EAAQiB,UAAW,MAGtE,6BClCZ,EAVc,SAAC,GAAqB,MAApBT,EAAoB,EAApBA,KAAMX,EAAc,EAAdA,SACZqB,GAAY,UAAAV,EAAKpB,KAAKC,oBAAV,eAAwBU,QAAxB,QAElB,OACI,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOmB,GAC/B,gBAAC,EAAD","file":"component---src-pages-about-tsx-46b5b69097876256e262.js","sourcesContent":["import * as React from \"react\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\n\nconst Nav = () => {\n    const data = useStaticQuery(graphql`\n    query NavQuery {\n      site {\n        siteMetadata {\n          social {\n            twitter\n            github\n          }\n        }\n      }\n    }\n  `)\n\n    const social = data.site.siteMetadata?.social\n\n    return (\n        <nav id=\"nav\" className=\"nav-bar\">\n            <Link className=\"nav-item\" to={\"/\"}>\n                Home\n            </Link>\n            <Link to={\"/thoughts\"}>\n                Thoughts\n            </Link>\n            <Link to={\"/poems\"}>\n                Poems\n            </Link>\n            <Link to={\"/about\"}>\n                About\n            </Link>\n            <Link to={`https://github.com/${social?.github || ``}`} target=\"_blank\">\n                GitHub\n            </Link>\n            <Link to={`https://twitter.com/${social?.twitter || ``}`} target=\"_blank\">\n                Twitter\n            </Link>\n        </nav>\n    )\n}\n\nexport default Nav\n","import * as React from \"react\"\nimport Nav from \"./nav\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ndeclare const __PATH_PREFIX__\n\nconst Layout = ({location, title, children}) => {\n    const data = useStaticQuery(graphql`\n    query LayoutQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n        }\n      }\n    }\n  `)\n\n    const author = data.site.siteMetadata?.author\n    const rootPath = `${__PATH_PREFIX__}/`\n    const isRootPath = location.pathname === rootPath\n\n    return (\n        <article className=\"global-wrapper\" data-is-root-path={isRootPath}>\n            <header className=\"global-header\">\n                <Nav/>\n                <hr/>\n            </header>\n            <main className=\"main-content\">{children}</main>\n            <hr/>\n            <footer className={`foot`}>\n                <p>\n                    © {new Date().getFullYear()}, Built with\n                    {` `}\n                    <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n                    <br/>\n                    © {new Date().getFullYear()}, Written by <strong>{author.name}</strong>\n                </p>\n            </footer>\n        </article>\n    )\n}\n\nexport default Layout\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n    const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n    // Set these values by editing \"siteMetadata\" in gatsby-config.js\n    const author = data.site.siteMetadata?.author\n    const social = data.site.siteMetadata?.social\n\n    return (\n        <div className=\"bio\">\n            <StaticImage\n                className=\"bio-avatar\"\n                layout=\"fixed\"\n                formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n                src=\"../images/profile-pic.jpg\"\n                width={50}\n                height={50}\n                quality={95}\n                alt=\"Profile picture\"\n            />\n            {author?.name && (\n                <p>\n                    Written by <strong>{author.name}</strong> {author?.summary || null}\n                </p>\n            )}\n            <hr/>\n        </div>\n    )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport Layout from \"../components/layout\";\nimport Bio from \"../components/bio\";\nimport { graphql } from \"gatsby\";\n\nconst About = ({data, location}) => {\n    const siteTitle = data.site.siteMetadata?.title || `Title`\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Bio/>\n        </Layout>\n    )\n}\n\nexport default About\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n          summary\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          update(formatString: \"MMMM DD, YYYY\")\n          title\n          category\n        }\n      }\n    }\n  }\n`\n\n"],"sourceRoot":""}