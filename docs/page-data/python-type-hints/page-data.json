{"componentChunkName":"component---src-templates-blog-post-js","path":"/python-type-hints/","result":{"data":{"site":{"siteMetadata":{"title":"Donald's Blog"}},"markdownRemark":{"id":"6da3d103-6644-5cef-8eb6-cf06635f0adb","excerpt":"以下所有例子都参考了最新版本的 Python 文档与 mypy 文档 必备条件 安装最新版本的 Python 和 mypy 要学会按需配置自己的编辑器，比如我的 VSCode 就装好了 Python 和 Pyright 扩展 变量 常量 内置类型 函数 类 Named tuples…","html":"<blockquote>\n<p>以下所有例子都参考了最新版本的 Python 文档与 mypy 文档</p>\n</blockquote>\n<h2>必备条件</h2>\n<p>安装最新版本的 Python 和 mypy</p>\n<p>要学会按需配置自己的编辑器，比如我的 VSCode 就装好了 Python 和 Pyright 扩展</p>\n<h2>变量</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">age<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\nchild<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span>\n<span class=\"token keyword\">if</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">18</span><span class=\"token punctuation\">:</span>\n    child <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    child <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></code></pre></div>\n<h2>常量</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Final\n\nRATE<span class=\"token punctuation\">:</span> Final <span class=\"token operator\">=</span> <span class=\"token number\">3000</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Base</span><span class=\"token punctuation\">:</span>\n    DEFAULT_ID<span class=\"token punctuation\">:</span> Final <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\nRATE <span class=\"token operator\">=</span> <span class=\"token number\">300</span>  <span class=\"token comment\"># Error: can't assign to final attribute</span>\nBase<span class=\"token punctuation\">.</span>DEFAULT_ID <span class=\"token operator\">=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># Error: can't override a final attribute</span></code></pre></div>\n<h2>内置类型</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> List<span class=\"token punctuation\">,</span> Set<span class=\"token punctuation\">,</span> Dict<span class=\"token punctuation\">,</span> Tuple<span class=\"token punctuation\">,</span> Optional\n\nx<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nx<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span>\nx<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\nx<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span>\nx<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bytes</span> <span class=\"token operator\">=</span> <span class=\"token string\">b\"test\"</span>\n\n<span class=\"token comment\"># 集合类型是首字母大写的</span>\n<span class=\"token comment\"># 元素的类型写在中括号里面（泛型）</span>\nx<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\nx<span class=\"token punctuation\">:</span> Set<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 字典需要写出 key 和 value 的类型</span>\nx<span class=\"token punctuation\">:</span> Dict<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"field\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 元组需要写出所有元素的类型</span>\nx<span class=\"token punctuation\">:</span> Tuple<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yes\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7.5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 用 Optional[] 表示可以为 None 的类型</span>\nx<span class=\"token punctuation\">:</span> Optional<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> some_function<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># mypy 可以推断出 if 语句里 x 不能为 None</span>\n<span class=\"token keyword\">if</span> x <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 如果 x 的值不可能为 None, 用 assert</span>\n<span class=\"token keyword\">assert</span> x <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>函数</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Callable<span class=\"token punctuation\">,</span> Iterator<span class=\"token punctuation\">,</span> Union<span class=\"token punctuation\">,</span> Optional<span class=\"token punctuation\">,</span> List\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">plus</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> num1 <span class=\"token operator\">+</span> num2\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> my_float<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span> <span class=\"token operator\">=</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> num1 <span class=\"token operator\">+</span> my_float\n\n<span class=\"token comment\"># callable (函数) 类型</span>\nx<span class=\"token punctuation\">:</span> Callable<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> f\n\n<span class=\"token comment\"># 生成器函数会返回可迭代的元素</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">g</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Iterator<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">yield</span> i\n        i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></code></pre></div>\n<h2>类</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> ClassVar\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span><span class=\"token punctuation\">:</span>\n    attr<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>\n    <span class=\"token comment\"># 实例变量可以有默认值</span>\n    charge_percent<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n\n    <span class=\"token comment\"># 什么也不返回，就是返回 None</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token comment\"># 实例方法，省略 self 的类型</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">my_method</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> str1<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> num <span class=\"token operator\">*</span> str1\n\n<span class=\"token comment\"># 类可以用作类型</span>\nx<span class=\"token punctuation\">:</span> MyClass <span class=\"token operator\">=</span> MyClass<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 类变量</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">:</span>\n    seats<span class=\"token punctuation\">:</span> ClassVar<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n    passengers<span class=\"token punctuation\">:</span> ClassVar<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 需要注意还没定义就使用一个类会报错</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">:</span> A<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Error</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\"># 你可以使用字符串的形式来规避</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># OK</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<h2>Named tuples 命名元组</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> NamedTuple\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span>NamedTuple<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>\n\np <span class=\"token operator\">=</span> Point<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Error: Argument has incompatible type \"str\"; expected \"int\"</span></code></pre></div>\n<h2>异步迭代器</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> AsyncIterator\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">gen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AsyncIterator<span class=\"token punctuation\">[</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    lst <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>b <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> b <span class=\"token keyword\">in</span> gen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 推断类型是 \"List[bytes]\"</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token string\">\"no way\"</span>  <span class=\"token comment\"># Error: Incompatible types (got \"str\", expected \"bytes\")</span></code></pre></div>\n<h2>类型别名</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">AliasType <span class=\"token operator\">=</span> Union<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span>Dict<span class=\"token punctuation\">[</span>Tuple<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Set<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Tuple<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AliasType<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<h2>Dataclasses 数据类</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass<span class=\"token punctuation\">,</span> field\n\n<span class=\"token decorator annotation punctuation\">@dataclass</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Application</span><span class=\"token punctuation\">:</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\n    plugins<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> field<span class=\"token punctuation\">(</span>default_factory<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n\ntest <span class=\"token operator\">=</span> Application<span class=\"token punctuation\">(</span><span class=\"token string\">\"Testing...\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># OK</span>\nbad <span class=\"token operator\">=</span> Application<span class=\"token punctuation\">(</span><span class=\"token string\">\"Testing...\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"with plugin\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Error: List[str] expected</span></code></pre></div>\n<h2>泛型</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> TypeVar<span class=\"token punctuation\">,</span> Generic\n\nT <span class=\"token operator\">=</span> TypeVar<span class=\"token punctuation\">(</span><span class=\"token string\">\"T\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Stack</span><span class=\"token punctuation\">(</span>Generic<span class=\"token punctuation\">[</span>T<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>    <span class=\"token comment\"># 泛型</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>T<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">push</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">:</span> T<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">pop</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> T<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">empty</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>items\n\n<span class=\"token comment\"># Stack[int] 实例</span>\nstack <span class=\"token operator\">=</span> Stack<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nstack<span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nstack<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nstack<span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># Type error</span></code></pre></div>\n<h2>Literal types</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">PrimaryColors <span class=\"token operator\">=</span> Literal<span class=\"token punctuation\">[</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yellow\"</span><span class=\"token punctuation\">]</span>\nSecondaryColors <span class=\"token operator\">=</span> Literal<span class=\"token punctuation\">[</span><span class=\"token string\">\"purple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"green\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">]</span>\nAllowedColors <span class=\"token operator\">=</span> Literal<span class=\"token punctuation\">[</span>PrimaryColors<span class=\"token punctuation\">,</span> SecondaryColors<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">paint</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> AllowedColors<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\npaint<span class=\"token punctuation\">(</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># OK</span>\npaint<span class=\"token punctuation\">(</span><span class=\"token string\">\"turquoise\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Error</span></code></pre></div>\n<h2>Protocol 协议</h2>\n<p>实现结构化子类型（静态鸭子类型），可以当成接口一样用。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Iterable<span class=\"token punctuation\">,</span> Protocol\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SupportsClose</span><span class=\"token punctuation\">(</span>Protocol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token comment\"># 函数体可以为空 (explicit '...')</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Resource</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 没有写 SupportsClose</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n       self<span class=\"token punctuation\">.</span>resource<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">close_all</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">:</span> Iterable<span class=\"token punctuation\">[</span>SupportsClose<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> items<span class=\"token punctuation\">:</span>\n        item<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nclose_all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>Resource<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"some/file\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># OK</span></code></pre></div>\n<h2>Abstractmethod 抽象方法</h2>\n<p>方法可以有默认的实现，但是抽象方法规定必须在子类中实现。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Protocol\n<span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> abstractmethod\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span><span class=\"token punctuation\">(</span>Protocol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">first</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">42</span>\n\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">second</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 没有默认实现</span>\n        <span class=\"token keyword\">raise</span> NotImplementedError  <span class=\"token comment\"># 防止这个方法被调用</span></code></pre></div>\n<h2>Enum 枚举</h2>\n<p>如果要像 C 语言一样定义枚举的话，也是用类来实现的。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> enum <span class=\"token keyword\">import</span> Enum\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span>Enum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    RED <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    GREEN <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    BLUE <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Color<span class=\"token punctuation\">.</span>RED<span class=\"token punctuation\">)</span></code></pre></div>\n<p>这样就能用类当成枚举一样用了。</p>\n<h2>参考资料</h2>\n<ul>\n<li><a href=\"https://mypy.readthedocs.io/en/stable/cheat_sheet_py3.html\">mypy 官方文档</a></li>\n<li><a href=\"https://www.python.org/dev/peps/pep-0484/\">PEP 484</a> type hints including generics</li>\n<li><a href=\"https://www.python.org/dev/peps/pep-0526/\">PEP 526</a> syntax for variable annotations</li>\n<li><a href=\"https://www.python.org/dev/peps/pep-0544/\">PEP 544</a> structural subtyping</li>\n<li><a href=\"https://www.python.org/dev/peps/pep-0589/\">PEP 589</a> typed dictionaries</li>\n</ul>","frontmatter":{"title":"Python 静态类型检查 mypy 示例","date":"September 28, 2019","description":""}}},"pageContext":{"slug":"/python-type-hints/","previous":{"fields":{"slug":"/javascript-shallow-vs-deep-copy/"},"frontmatter":{"title":"JavaScript 浅复制和深复制"}},"next":{"fields":{"slug":"/programming-philosophy-notes/"},"frontmatter":{"title":"编程的智慧总结笔记"}}}}}