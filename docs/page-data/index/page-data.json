{"componentChunkName":"component---src-pages-index-tsx","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Donald's Blog"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"in，ref 和 out 都是按引用传递参数，但是用途不同，其中 in 表示只传入参数，不能修改参数，out 则必须修改参数，供函数外使用。 参数修饰符 是否按引用传递参数 是否必须初始化 是否可以修改 是否必须修改 in Yes Yes No No ref Yes Yes…","fields":{"slug":"/csharp-in-ref-out/"},"frontmatter":{"date":"May 24, 2020","title":"C# 中 in，out 和 ref 的区别","description":""}}},{"node":{"excerpt":"我在C#官方文档的 使用属性 里看到这种代码： 这段代码里的  是以下划线开头的，用来表示 private。这样做会有什么问题呢？ 项目混合使用了驼峰命名法与下划线命名法，扰乱了阅读代码的视线 不像其他语言（比如 JavaScript），C#本身已经提供了private…","fields":{"slug":"/why-i-dont-recommend-underbar-in-csharp/"},"frontmatter":{"date":"February 27, 2020","title":"为什么我不建议在 C# 中用下划线 _ 开头来表示私有字段","description":""}}},{"node":{"excerpt":"使用 create-next-app 创建的 Next.js 项目配置接口跨域代理转发需要用到 custom server 功能。\n先安装好 express 和 http-proxy-middleware 在项目根目录下新建 server.js…","fields":{"slug":"/proxy-in-nextjs/"},"frontmatter":{"date":"November 11, 2019","title":"Next.js 配置接口跨域代理转发","description":""}}},{"node":{"excerpt":".NET Interactive发布预览版了，可以像Python那样用jupyter notebooks来编辑C#代码。具体可以在GitHub上查看dotnet/interactive项目。 安装步骤 安装好.NET Core 3.1 SDK 安装好Python 3（默认有pip…","fields":{"slug":"/jupyter-notebooks-with-csharp-dotnet-interactive/"},"frontmatter":{"date":"November 06, 2019","title":"基于 Jupyter Notebooks 的 C#/.NET Interactive 安装与使用","description":""}}},{"node":{"excerpt":"使用 Bash 自动化安装 先 下载 Bash 脚本（Linux/macOS） ，运行脚本 或者使用包管理器安装 或者手动安装 下载 .NET Core 二进制版本 ，终端输入  在home目录下面的文件，末尾添加环境变量（如果装了zsh就在） 安装成功检测 重启终端并输入","fields":{"slug":"/install-dotnet-on-ubuntu/"},"frontmatter":{"date":"October 29, 2019","title":"Ubuntu 安装 C# 语言开发环境","description":""}}},{"node":{"excerpt":"编程的智慧——王垠\nhttp://www.yinwang.org/blog-cn/2015/11/21/programming-philosophy 反复推敲代码 回头去提炼和反思自己的代码 写优雅的代码，树状结构的 if…","fields":{"slug":"/programming-philosophy-notes/"},"frontmatter":{"date":"September 30, 2019","title":"编程的智慧总结笔记","description":""}}},{"node":{"excerpt":"以下所有例子都参考了最新版本的 Python 文档与 mypy 文档 必备条件 安装最新版本的 Python 和 mypy 要学会按需配置自己的编辑器，比如我的 VSCode 就装好了 Python 和 Pyright 扩展 变量 常量 内置类型 函数 类 Named…","fields":{"slug":"/python-type-hints/"},"frontmatter":{"date":"September 28, 2019","title":"Python 静态类型检查 mypy 示例","description":""}}},{"node":{"excerpt":"浅复制只会复制第一层的元素，嵌套的元素还是原来的引用。 深复制会每一层都递归复制。","fields":{"slug":"/javascript-shallow-vs-deep-copy/"},"frontmatter":{"date":"September 28, 2019","title":"JavaScript 浅复制和深复制","description":""}}},{"node":{"excerpt":"首先要在 database 文件夹里建立 DatabaseModule 模块文件， 还有 databaseProviders，要注意根据情况配置好端口、数据库名等等信息， 然后在一个需要用到 MongoDB 的模块里导入 DatabaseModule…","fields":{"slug":"/use-mongodb-with-nextjs-typeorm/"},"frontmatter":{"date":"September 28, 2019","title":"在 Nest.js 中使用 MongoDB 与 TypeORM","description":""}}},{"node":{"excerpt":"可以使用 vscode-vim 扩展，但是要注意一些ctrl…","fields":{"slug":"/vim-commands/"},"frontmatter":{"date":"September 28, 2019","title":"学习 Vim 命令总结","description":""}}},{"node":{"excerpt":"一般我们不管是做前端还是后端，为了提高代码的质量，会选择一种测试驱动开发（TDD）的办法来写代码进行单元测试。Jest 是 Facebook 团队开发的一款测试框架，为的是提高开发者的“开发体验”。我们做单元测试的时候需要分解出一个个独立的模块，但是这样做要写很多的 mock…","fields":{"slug":"/test-javascript-with-jest/"},"frontmatter":{"date":"January 14, 2018","title":"使用 Jest 进行愉快的 JavaScript/TypeScript 测试","description":""}}},{"node":{"excerpt":"VSCode 是微软出品的，基于 Electron 和 TypeScript 的，集成了 git 版本管理和命令行终端，而且开源稳定，插件丰富，再搭配一款 Chrome 浏览器，可以说是了。 安装指南 VSCode 需要用到  和 ，如果没有就到https://nodejs…","fields":{"slug":"/vscode-tips/"},"frontmatter":{"date":"January 14, 2018","title":"前端开发神器 VSCode 使用总结","description":""}}},{"node":{"excerpt":"和其他语言有些不同，在 JavaScript…","fields":{"slug":"/javascript-double-equal-vs-triple-equal/"},"frontmatter":{"date":"November 07, 2017","title":"JavaScript 中 == 和 === 的区别","description":""}}},{"node":{"excerpt":"使用 pip  用来记录项目所有的依赖包和版本号，只需要一个简单的 pip 命令就能完成。 生成的文件会像这个样子 然后就可以用 来一次性安装 requirements.txt 里面所有的依赖包，真是非常方便。 使用 Python3 的 venv…","fields":{"slug":"/python-dependencies-with-poetry/"},"frontmatter":{"date":"October 15, 2017","title":"Python 一键安装全部依赖包","description":""}}}]}},"pageContext":{}}}